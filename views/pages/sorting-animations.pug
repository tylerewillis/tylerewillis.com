extends ../cs/example-layout.pug

block pages-head
	title
	meta(name='description', content='')
	meta(property='og:locale', content='en_US')
	meta(property='og:type', content='website')
	meta(property='og:title', content='')
	meta(property='og:description', content='')
	meta(property='og:image', content='')
	meta(property='og:image', content=`${url}`)

	//- Schema
	script.
		{
			"@context": "http://schema.org",
			"@type": "BlogPosting",
			"author": "Tyler Willis",
			"headline": "Check balance of brackets in code",
			"about": "Using stacks to verify string balance in terms of opening and closing brackets in JavaScript and PHP.",
			"inLanguage": "en-US",
			"keywords": "JavaScript, PHP, string balance, constant time, linear time"
		}

block example-content
	.write-up
		h1 Check balance of brackets in code
		h2 Use Case:
		p Let's say you're writing some code in a text editor and you'd like to create a way to verify you haven't forgotten to close any opening brackets in your code, or that you haven't unintentionally overlapped a new, different bracket set with a previous bracket set. A lot of text editors provide native (or plugin) options for assisting you with this today, but, for a test case, below are examples for building this functionality efficiently in both JavaScript and PHP.
		p It would be simple to edit the below examples for other string pairs (single or multiple characters) for additional use cases.

	.examples
		.numbers-container
			.numbers
			span.sort-none
				i.fas.fa-sort-numeric-down
				| Sort
			span.insertion-sort
				i.fas.fa-sign-in-alt
				| Insertion Sort
			span.bubble-sort
				i.fas.fa-circle
				| Bubble Sort
			span.spacer |
			span.pause-sort
				i.fas.fa-pause
				| Pause
			span.randomize-sort
				i.fas.fa-redo-alt
				| Shuffle